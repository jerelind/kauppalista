{"version":3,"sources":["services/items.js","App.js","index.js"],"names":["baseUrl","items","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","concat","remove","delete","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addItem","event","preventDefault","itemObject","name","state","newItem","quantity","newQuantity","itemService","setState","handleItemChange","target","value","handleQuantityChange","increase","itemName","getAttribute","itemsCopy","JSON","parse","stringify","console","log","index","i","length","itemId","map","item","removedItems","decrease","removeItem","removedItem","filter","toString","clearList","_this2","_this3","react_default","a","createElement","Container","alt","src","Icon","size","color","onSubmit","Input","label","basic","content","type","placeholder","onChange","Button","key","onClick","primary","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.28e16063.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/items'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react';\nimport {Container, Icon, Button, Input} from 'semantic-ui-react'\nimport itemService from './services/items'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      items: [],\n      newItem: \"\",\n      newQuantity: \"\"\n    }\n  }\n\n  componentDidMount() {\n    itemService\n      .getAll()\n      .then(items => {\n        this.setState({items})\n      })\n  }\n\n  addItem = (event) => {\n    event.preventDefault()\n\n    const itemObject = {\n      name: this.state.newItem,\n      quantity: this.state.newQuantity\n    }\n\n    itemService\n      .create(itemObject)\n      .then(newItem => {\n        this.setState({\n          items: this.state.items.concat(newItem),\n          newItem: \"\",\n          newQuantity: \"\"\n        })\n      })\n  }\n\n  handleItemChange = (event) => {\n    this.setState({newItem: event.target.value})\n  }\n\n  handleQuantityChange = (event) => {\n    this.setState({newQuantity: event.target.value})\n  }\n\n  increase = (event) => {\n    const itemName = event.target.getAttribute(\"name\")\n    let itemsCopy = JSON.parse(JSON.stringify(this.state.items))\n    console.log(itemsCopy)\n    let index = null\n\n    for(let i = 0; i < itemsCopy.length; i++) {\n      if(itemsCopy[i].name === itemName) {\n        index = i\n      }\n    }\n\n    itemsCopy[index].quantity++\n\n    const itemId = itemsCopy.map(item => item.id)\n    console.log(itemId)\n\n      for(let i = 0; i < itemsCopy.length; i++) {\n        itemService\n          .remove(itemId[i])\n          .then(removedItems => {\n            this.setState({\n              items: []\n            })\n          })\n      }\n\n      for(let i = 0; i < itemsCopy.length; i++) {\n      itemService\n      .create(itemsCopy[i])\n      .then(newItem => {\n        this.setState({\n          items: this.state.items.concat(newItem),\n          newItem: \"\",\n          newQuantity: \"\"\n        })\n      })\n    }\n  }\n  \n  decrease = (event) => {\n    const itemName = event.target.getAttribute(\"name\")\n    let itemsCopy = JSON.parse(JSON.stringify(this.state.items))\n    console.log(itemsCopy)\n    let index = null\n\n    for(let i = 0; i < itemsCopy.length; i++) {\n      if(itemsCopy[i].name === itemName) {\n        index = i\n      }\n    }\n\n    itemsCopy[index].quantity--\n\n    const itemId = itemsCopy.map(item => item.id)\n    console.log(itemId)\n\n      for(let i = 0; i < itemsCopy.length; i++) {\n        itemService\n          .remove(itemId[i])\n          .then(removedItems => {\n            this.setState({\n              items: []\n            })\n          })\n      }\n\n      for(let i = 0; i < itemsCopy.length; i++) {\n      itemService\n      .create(itemsCopy[i])\n      .then(newItem => {\n        this.setState({\n          items: this.state.items.concat(newItem),\n          newItem: \"\",\n          newQuantity: \"\"\n        })\n      })\n    }\n  }\n\n  removeItem = (event) => {\n    const itemId = event.target.getAttribute(\"id\")\n\n    itemService\n      .remove(itemId)\n      .then(removedItem => {\n        this.setState({\n          items: this.state.items.filter(item => item.id.toString() !== itemId),\n          newItem: \"\",\n          newQuantity: \"\"\n      })\n    })\n  }\n\n  clearList = () => {\n    const itemId = this.state.items.map(item => item.id)\n    console.log(itemId)\n\n    for(let i = 0; i < this.state.items.length; i++) {\n      itemService\n        .remove(itemId[i])\n        .then(removedItems => {\n          this.setState({\n            items: []\n          })\n        })\n    }\n  }\n\n\n  render() {\n    return (\n      <Container>\n      <div id=\"main\">\n        <div>\n        <div>\n          <img id=\"image\" alt=\"sheltti \"src=\"http://www.tunturisusi.com/koiralinkit/kuva633.jpg\"/>\n        </div>\n        <h1><Icon name=\"tasks\" size=\"large\" color=\"orange\"/>Shopping list</h1>\n        <form id=\"form\" onSubmit={this.addItem}>\n          <Input label={{basic: true, content: 'Item'}} id=\"input\" type=\"text\" placeholder=\"Item\" value={this.state.newItem} onChange={this.handleItemChange}/>\n          <Input label={{basic: true, content: 'Amount'}} id=\"input\" type=\"number\" placeholder=\"Quantity\" value={this.state.newQuantity} onChange={this.handleQuantityChange}/>\n          <Button color=\"green\" type=\"submit\">Add</Button>\n        </form>\n        </div>\n        <div id=\"list\">\n        {this.state.items.map(item => <li key={item.name}><Icon name=\"check\" color=\"green\"/> {item.name}: {item.quantity} <Button id=\"button\" name={item.name} onClick={this.increase}>+</Button><Button id=\"button\" name={item.name} onClick={this.decrease}>-</Button><Button name={item.name} id={item.id} onClick={this.removeItem} color=\"red\">Remove</Button></li>)}\n        <br/>\n        <Button primary onClick={this.clearList}>Clear list</Button>\n        </div>\n      </div>\n      </Container>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}